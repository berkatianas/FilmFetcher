{"version":3,"sources":["components/Home.js","components/Header.js","components/Footer.js","components/Film.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Test","props","handleChange","event","value","target","setState","state","data","axios","get","res","this","Fragment","Container","style","paddingTop","paddingBottom","maxWidth","TextField","id","label","margin","onChange","display","autoComplete","renderResults","results","length","marginBottom","Grid","container","spacing","map","film","item","key","show","xs","sm","md","Card","height","flexDirection","CardMedia","title","image","medium","CardContent","flexGrow","Typography","gutterBottom","variant","component","name","language","premiered","network","country","CardActions","justifyContent","to","pathname","filmName","filmType","type","filmStatus","status","filmSummary","summary","filmImage","textDecoration","color","fontSize","Component","Home","CssBaseline","AppBar","position","Toolbar","noWrap","marginTop","align","paragraph","backgroundColor","padding","flexShrink","Film","location","textAlignLast","src","alt","dangerouslySetInnerHTML","__html","NotFound","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa2ec7cf.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport SearchResults from \"react-filter-search\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Test extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      value: \"\"\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://api.tvmaze.com/search/shows?q=test\");\r\n    this.setState({\r\n      data: res.data\r\n    });\r\n  }\r\n  handleChange = event => {\r\n    const { value } = event.target;\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { data, value } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <main>\r\n          <Container\r\n            style={{ paddingTop: \"32px\", paddingBottom: \"32px\" }}\r\n            maxWidth=\"md\"\r\n          >\r\n            <div style={{ paddingTop: \"32px\", paddingBottom: \"32px\" }}>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Tapez votre recherche\"\r\n                margin=\"normal\"\r\n                value={value}\r\n                onChange={this.handleChange}\r\n                style={{ display: \"table\", margin: \"0 auto\" }}\r\n                autoComplete=\"off\"\r\n              />\r\n            </div>\r\n\r\n            <SearchResults\r\n              value={value}\r\n              data={data}\r\n              renderResults={results => (\r\n                <Fragment>\r\n                  <div style={{ display: \"table\", margin: \"10px auto\" }}>\r\n                    {results.length === 0 ? (\r\n                      <h4 style={{ marginBottom: \"260px\" }}>\r\n                        Pas de résultats\r\n                      </h4>\r\n                    ) : (\r\n                      <h4>\r\n                        Voici les {results.length} résultat(s) de recherche\r\n                      </h4>\r\n                    )}\r\n                  </div>\r\n                  <Grid container spacing={4}>\r\n                    {results.map(film => (\r\n                      <Grid item key={film.show.id} xs={12} sm={6} md={4}>\r\n                        <Card\r\n                          style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\"\r\n                          }}\r\n                        >\r\n                          <CardMedia\r\n                            style={{ paddingTop: \"56.25%\" }}\r\n                            title=\"Image title\"\r\n                            image={\r\n                              film.show.image !== null\r\n                                ? film.show.image.medium\r\n                                : \"https://source.unsplash.com/random\"\r\n                            }\r\n                          />\r\n                          <CardContent style={{ flexGrow: 1 }}>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"h5\"\r\n                              component=\"h2\"\r\n                            >\r\n                              {film.show.name}\r\n                            </Typography>\r\n                            <Typography>{film.show.language}</Typography>\r\n                            <Typography>{film.show.premiered}</Typography>\r\n                            <Typography>\r\n                              {film.show.network.country.name}\r\n                            </Typography>\r\n                          </CardContent>\r\n                          <CardActions style={{ justifyContent: \"center\" }}>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/${film.show.id}`,\r\n                                filmName: `${film.show.name}`,\r\n                                filmType: `${film.show.type}`,\r\n                                filmStatus: `${film.show.status}`,\r\n                                filmSummary: `${film.show.summary}`,\r\n                                filmImage: `${\r\n                                  film.show.image !== null\r\n                                    ? film.show.image.medium\r\n                                    : \"https://source.unsplash.com/random\"\r\n                                }`\r\n                              }}\r\n                              style={{\r\n                                textDecoration: \"none\",\r\n                                color: \"black\",\r\n                                fontSize: \"20px\"\r\n                              }}\r\n                            >\r\n                              Voir Détails\r\n                            </Link>\r\n                          </CardActions>\r\n                        </Card>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </Fragment>\r\n              )}\r\n            />\r\n          </Container>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"relative\">\r\n          <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n            <Toolbar>\r\n              <LiveTvIcon />{\" \"}\r\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                Test Films\r\n              </Typography>\r\n            </Toolbar>\r\n          </Link>\r\n        </AppBar>\r\n\r\n        {/* Hero unit */}\r\n        <div style={{ marginTop: \"16px\" }}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              Axios Film's Fetch\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              En ce qui concerne les films sans photos dans l'API , j'ai mis une\r\n              photo Random pour avoir un affichage clean\r\n            </Typography>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <footer\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"24px\",\r\n            flexShrink: \"0px\"\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            Anas Berkati - 10 Novembre 2019\r\n          </Typography>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nexport default class Film extends Component {\r\n  render() {\r\n    if (!this.props.location.filmName) return <Redirect to=\"/\" />;\r\n    const {\r\n      filmName,\r\n      filmType,\r\n      filmStatus,\r\n      filmImage,\r\n      filmSummary\r\n    } = this.props.location;\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            component=\"div\"\r\n            style={{ backgroundColor: \"#cfe8fc\", height: \"124vh\" }}\r\n          >\r\n            <div style={{ textAlignLast: \"center\" }}>\r\n              <h2>Fiche Technique</h2>\r\n              <p>Name :{filmName}</p>\r\n              <p>Type : {filmType}</p>\r\n              <p>Status : {filmStatus}</p>\r\n              <img src={filmImage} alt=\"aoaoa\" style={{ maxWidth: \"30%\" }} />\r\n              {filmSummary ? (\r\n                <div>\r\n                  <b>\r\n                    <i>Synopsis</i>\r\n                  </b>\r\n                </div>\r\n              ) : (\r\n                <div>Pas de Description pour ce film</div>\r\n              )}\r\n              <p\r\n                style={{ margin: \"10px\" }}\r\n                dangerouslySetInnerHTML={{\r\n                  __html: filmSummary ? filmSummary : \"\"\r\n                }}\r\n              />\r\n              <Link to=\"/\">Retour</Link>\r\n            </div>\r\n          </Typography>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return <div>Not Found!</div>;\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Film from \"./components/Film\";\nimport NotFound from \"./components/NotFound\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:show_id\" component={Film} />\n        <Route component={NotFound} />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}